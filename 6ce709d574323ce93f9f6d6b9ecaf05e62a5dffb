{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "87cd81be_f29900c4",
        "filename": ".gitignore",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:38:27Z",
      "side": 1,
      "message": "mind putting a *.swp in for us poor vim users?",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2c7725f_828afe4f",
        "filename": ".gitignore",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:40:46Z",
      "side": 1,
      "message": "follow up is fine, or I can also just put the patch up.",
      "parentUuid": "87cd81be_f29900c4",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f377391_ca0b642c",
        "filename": ".gitignore",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T00:57:41Z",
      "side": 1,
      "message": "Just put a patch up.  I don\u0027t think we normally do that (I just keep .swp in my global git config) but it\u0027s not worth arguing about if you want it here.  Send a patch üòä",
      "parentUuid": "e2c7725f_828afe4f",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "667ab09e_eaa83338",
        "filename": ".gitignore",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T02:06:25Z",
      "side": 1,
      "message": "I swear we had it written down in docs not to add editor-specific files to .gitignores.  Yes, that\u0027s what global git configs are for.",
      "parentUuid": "2f377391_ca0b642c",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51990d04_eb21136e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:38:27Z",
      "side": 1,
      "message": "Big thing IMO, is how much we\u0027re going to break apart different platforms across different files, or if we\u0027re just going to ship one executable. My preference is to not ship a mega-executable, but that\u0027s just my first thought.",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5ce4505_209a4a68",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T00:57:41Z",
      "side": 1,
      "message": "Eh, we\u0027re going to start with mega executable (which really isn\u0027t that mega) and pivot if we need to.",
      "parentUuid": "51990d04_eb21136e",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "068ed2f2_871f5b38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T01:02:38Z",
      "side": 1,
      "message": "I\u0027m fine with this as is but this file is already too big. We need to break out the file structure in a follow up commit and make some of these common functions like gpio and rebinding i2c controllers to be common and (slightly) more strongly typed. Doesn\u0027t block the initial commit though.",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3aa1486_d1ff5b4c",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T02:15:05Z",
      "side": 1,
      "message": "meson conventions are that these should be `gpiodcxx_dep` (ie. add `_dep` when it is a dependency).",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 8
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55703860_aa80f117",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T02:15:05Z",
      "side": 1,
      "message": "Can you add the wrap file for this one please?",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08b3b8c0_d56bb360",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T17:22:55Z",
      "side": 1,
      "message": "will fix.",
      "parentUuid": "c3aa1486_d1ff5b4c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 8
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "facdf8b6_9a8b59af",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T17:22:55Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "55703860_aa80f117",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49c55342_dd8f0a94",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T02:15:05Z",
      "side": 1,
      "message": "Please add `/ \u0027platform_init\u0027` per the anti-patterns guidelines.",
      "range": {
        "startLine": 12,
        "startChar": 38,
        "endLine": 12,
        "endChar": 63
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4dcd2a5_64d36d58",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T02:15:05Z",
      "side": 1,
      "message": "Why are you adding prefix here?  Meson should do that automatically with the install_dir.  You don\u0027t want a double-prefix.",
      "range": {
        "startLine": 12,
        "startChar": 10,
        "endLine": 12,
        "endChar": 37
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c69e2aca_1b745549",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T17:22:55Z",
      "side": 1,
      "message": "I think now that this is a CLI, it actually needs to go to bin, not libexec, right?",
      "parentUuid": "49c55342_dd8f0a94",
      "range": {
        "startLine": 12,
        "startChar": 38,
        "endLine": 12,
        "endChar": 63
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a05ad365_3e857a11",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T17:22:55Z",
      "side": 1,
      "message": "will fix.  I think this was copied from some of the early meson files.",
      "parentUuid": "d4dcd2a5_64d36d58",
      "range": {
        "startLine": 12,
        "startChar": 10,
        "endLine": 12,
        "endChar": 37
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82b41ea2_de782ea1",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T02:15:05Z",
      "side": 1,
      "message": "Do we need this to be a compile flag to start with?  Ideally we\u0027d compile everything and select the right stuff based on platform identifier, right?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 44
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d365d40c_208dca4e",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T17:22:55Z",
      "side": 1,
      "message": "I could make this a secondary platform i guess.  Will ask other folks about what can be done here.",
      "parentUuid": "82b41ea2_de782ea1",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 44
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00726444_33bc8007",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T02:15:05Z",
      "side": 1,
      "message": "Please use the underscore deliminated one.  See I316527fa798ab5acc8569f2e8de932fffdde1070 for why (among a bunch of other diffs I made at the same time).",
      "range": {
        "startLine": 31,
        "startChar": 48,
        "endLine": 31,
        "endChar": 68
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a265052b_477f5863",
        "filename": "meson.build",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T17:22:55Z",
      "side": 1,
      "message": "üëç\n\nForgot we did that.",
      "parentUuid": "00726444_33bc8007",
      "range": {
        "startLine": 31,
        "startChar": 48,
        "endLine": 31,
        "endChar": 68
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da0b452f_dec2465e",
        "filename": "meson.options",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T02:15:05Z",
      "side": 1,
      "message": "Can we get more details of what this is?  Maybe we need vendor names here?\n\nI\u0027d suggest we make this an array?",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0fdc65c_7c8c5742",
        "filename": "meson.options",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T17:22:55Z",
      "side": 1,
      "message": "Will add a better description.",
      "parentUuid": "da0b452f_dec2465e",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46b23e3e_26cd7034",
        "filename": "meson.options",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T02:15:05Z",
      "side": 1,
      "message": "We should not default-disable anything because we are going to want it all to compile in CI.",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f94fb447_870c8a95",
        "filename": "meson.options",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T17:22:55Z",
      "side": 1,
      "message": "It all compiles, there\u0027s an if constexpr that makes sure it doesn\u0027t get included.",
      "parentUuid": "46b23e3e_26cd7034",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6ab433a_335186f6",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T02:15:05Z",
      "side": 1,
      "message": "We\u0027re going to refactor this to use lg2, right?",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4a707a7_5b87c1a1",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T17:22:55Z",
      "side": 1,
      "message": "that or std::print.  Was going to do that in a future patch.",
      "parentUuid": "a6ab433a_335186f6",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22224641_9d8674cc",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:38:27Z",
      "side": 1,
      "message": "mind breaking this and other gpio files into a helper header+source? same with rebind i2c, assuming we\u0027re",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae5aaeaa_96e2c28b",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:40:46Z",
      "side": 1,
      "message": "assuming we\u0027re keeping one mega executable*",
      "parentUuid": "22224641_9d8674cc",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b81c1bb7_de2fd636",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T00:57:41Z",
      "side": 1,
      "message": "Will do in the next patch.  Trying to keep this relatively close to what we have this second so that if... read that when we screw things up, we\u0027ll know what change messed up.",
      "parentUuid": "ae5aaeaa_96e2c28b",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e33c79d9_7362f51c",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:52:59Z",
      "side": 1,
      "message": "this is an arbitrary and large timeout. It\u0027d be nice to make this configurable through the constructor. not blocking.",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edda198d_e6ad4467",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:38:27Z",
      "side": 1,
      "message": "I can go either way with this, but it\u0027d be nice to avoid which typing here, considering these are generally in the same numeric range. how much do you hate the idea of enum clases?",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6f95b63_e1e27306",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T00:57:41Z",
      "side": 1,
      "message": "i\u0027m not following?  You\u0027d do an enum class for \n\nenum class Bus{\nBus1\nBus2\n\netc?\n\n}\n\n\nWhere would we stop it?",
      "parentUuid": "edda198d_e6ad4467",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ad0e0bf_e38d9970",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T01:03:48Z",
      "side": 1,
      "message": "just an empty enum class for strong typing. There\u0027s probably a better way.",
      "parentUuid": "a6f95b63_e1e27306",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47156376_4ea9705a",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:38:27Z",
      "side": 1,
      "message": "this is extremely gb200 specific. should we just be putting stuff like this in a gb200 namespace?",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9782d086_a1b7a170",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T00:57:41Z",
      "side": 1,
      "message": "NVL144 will do the same thing, but probably with arguments.  Your comment is fair though.",
      "parentUuid": "47156376_4ea9705a",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "001c398c_3f3ac8d9",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 381,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:52:59Z",
      "side": 1,
      "message": "is this supposed to be commented out? same below on line 387.",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba561832_1ad19e89",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:38:27Z",
      "side": 1,
      "message": "this is kind of hard to read. mind making a map of bus numbers to special function registers? we can do it lazily, as people need to add more busses. also, it could make updating across filesystem breakages easier...rather than hunting down every use of magic numbers, we just update the map/rebind function.",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf0a1538_aacd7f06",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:42:55Z",
      "side": 1,
      "message": "the key here (input to function) could also be the strongly typed thing, if we go down that path.",
      "parentUuid": "ba561832_1ad19e89",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee4fab44_60664219",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T00:57:41Z",
      "side": 1,
      "message": "Yep, this sucks to read.  It sucked worse to figure out.  Will do in next patch.",
      "parentUuid": "cf0a1538_aacd7f06",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "042e1580_112964dd",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 416,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:52:59Z",
      "side": 1,
      "message": "this piece we could just move into main rather than requiring every platform_init to do it. not blocking.",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47fd1734_593e2dae",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 422,
      "author": {
        "id": 1002504
      },
      "writtenOn": "2025-08-21T00:38:27Z",
      "side": 1,
      "message": "i was assuming that we\u0027d have separate executables for different platforms, I\u0027m not sure if I prefer one way or the other. I can see this getting very unwieldy being in one file however rather quickly.",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f37fa11f_83a62a11",
        "filename": "platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 422,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T00:57:41Z",
      "side": 1,
      "message": "for the moment we\u0027re doing mega executable.  When it becomes a problem, we\u0027ll pivot, but the hope is most of these share most of the code, so it doesn\u0027t really matter.",
      "parentUuid": "47fd1734_593e2dae",
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1db7d129_795fea1a",
        "filename": "platform_init.service",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-08-21T02:15:05Z",
      "side": 1,
      "message": "I\u0027m surprised you\u0027re wanting to use \u0027gb200\u0027 as a platform name here?  Isn\u0027t that a CPU/GPU combination?",
      "range": {
        "startLine": 7,
        "startChar": 37,
        "endLine": 7,
        "endChar": 42
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91029bd5_d1607f82",
        "filename": "platform_init.service",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-21T17:22:55Z",
      "side": 1,
      "message": "\"GB200\" is a specific board series, that yes, includes a CPU and a GPU.\nhttps://www.nvidia.com/en-us/data-center/gb200-nvl72/\n\nbut they\u0027re on the same board.  With that said, happy to change names if you want.",
      "parentUuid": "1db7d129_795fea1a",
      "range": {
        "startLine": 7,
        "startChar": 37,
        "endLine": 7,
        "endChar": 42
      },
      "revId": "6ce709d574323ce93f9f6d6b9ecaf05e62a5dffb",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}